import javax.swing.*;
import javax.swing.event.MouseInputListener;
import java.awt.*;                                 // for Toolkit and Dimension
import java.awt.event.MouseEvent;

public class MainFrameGUI extends JFrame
                            implements MouseInputListener
{

    Toolkit toolkit;
    Dimension screenSize;
    JPanel[][] panelGrid = new JPanel[50][50];

    MainFrameGUI()
    {
        buildPanels();
        buildMainFrame();
    }

    void buildMainFrame()
    {
        toolkit = Toolkit.getDefaultToolkit();               // used to help get the users screen size
        screenSize = toolkit.getScreenSize();                               //get the users screen size
        setSize((screenSize.width/2 + 70), (screenSize.height/2 + 70));           
        setLocationRelativeTo(null);                                              // window is placed in the center of screen
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);                             //when close frame the program stops
        setTitle("Color the panels!");
        setVisible(true);
    }

    void buildPanels()
    {
        setLayout(new GridLayout(50,50));                         // set the layout to a 50x50 grid
        for(int i = 0; i < 50; i++)
        {
            for(int j = 0; j < 50; j++)
            {
                panelGrid[i][j] = new JPanel();
                panelGrid[i][j].addMouseListener(this);
                add(panelGrid[i][j]);                                       // add the panel to the frame
            }
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        
      
    }

    @Override
    public void mousePressed(MouseEvent e) {
        
       
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
      
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        JPanel panel = (JPanel) e.getSource();         // Get the panel that was entered
        
         //math random returns a double between 0 and 1 so multiply by 256 to get a RGB value(0-255)
        panel.setBackground(new Color((int) (Math.random() * 256),(int) (Math.random() * 256),(int) (Math.random() * 256)));
      
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
      
    }

    @Override
    public void mouseDragged(MouseEvent e) {
     
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        
      
    }
}
